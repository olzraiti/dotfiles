#
# wm independent hotkeys
#
# Current layout:
#
# <                                     ` lock
# z vol       a quake       q info       1 desktop
# x vol       s quake 2     w close      2 desktop
# c           d modes       e quak-t     3 desktop
# v vpn       f full        r launch     4 desktop
# b balance   g pstiled tog t tiled      5 desktop
#                                                 
# n rotate    h nav         y move float 5 desktop
# m rotate    j nav         u move float 7 desktop
# , padding   k nav         i move float 8 desktop
# . padding   l nav         o move float 9 desktop
# /           ; split       p pass       0 logout,sxhkd,power
#             '             [ prev-d     - order
#             \             ] next-d     = order
#	                            
#ESC none
#SPACE presel
#ENTER terminal

	
super + grave
	xwobflock

# quit bspwm normally
super + 0
	bspc quit

super + alt + 0
	pkill -USR1 -x sxhkd

super + {ctrl, shift} + 0
	sudo pkill openvpn && \
	sleep 0.5 && \
	{poweroff || poweroff, systemctl reboot || systemctl reboot}

super + {_,shift} + Return
	urxvtc { ,-name floating}

super + r
	launcher

super + {_,shift,ctrl,shift+ctrl,alt} + space
	toggle_{kmap,opacity,rs,trayer,cairo_dock}

super + {_,ctrl +} q
	{notify_info,query_wifi}

ctrl + space
	for corner in northeast northwest southeast southwest; do \
		touch "/dev/shm/notify_fifo_"$corner"_dismiss"; \
	done

super + p + {_, shift, ctrl, ctrl + shift} + {_, alt}
	{paste_pass, paste_user, paste_user_pass, paste_user_then_pass} {'', 'dontguess'}

super + {_,shift + } v
	{toggle,restart}_vpn
	
super + ctrl + v
	pia_dialog

# quakes
super + {_, shift, ctrl, shift + ctrl} + e
	quake_terminal -g  -d {top, left, right, bottom}
alt + {_, shift, ctrl, shift + ctrl} + e
	quake_terminal -d {bottom, left, right, top}
alt + {_, shift, ctrl, shift + ctrl} + a
	quakify -d {bottom, left, right, top} -n spawned_by_a_key
super + {_, shift, ctrl, shift + ctrl} + a
	quakify -g -d {top, left, right, bottom} -n spawned_by_a_key
alt + {_, shift, ctrl, shift + ctrl} + s
	quakify -d {top, left, right, bottom} -n spawned_by_s_key
super + {_, shift, ctrl, shift + ctrl} + s
	quakify -g -d {bottom, left, right, top} -n spawned_by_s_key

super + {z, x}
	{lower_vol, raise_vol}
XF86Audio{Lower,Raise}Volume
	{lower_vol, raise_vol}
XF86AudioMute
	toggle_mute

# close and kill
super + {_,shift + } w
	bspc node -{c,k}

#
# NODES
#
# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + semicolon
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# cancel the preselection for the focused node
super + ctrl + semicolon
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
	#bspc node -p cancel

#
# resize tiled/floating
#

# expand the tiled space in the given direction
super + alt + {_,ctrl} + {shift,_} +  {h,j,k,l}
	amount={10,50} && \
	$BSPWM_SCRIPTS_DIR/resizer {-i, } {left -$amount 0,bottom 0 $amount,top 0 -$amount,right $amount 0, bottom_left -$amount $amount, bottom_right $amount $amount, top_left -$amount -$amount, top_right $amount -$amount}



# node modes
super + ctrl + s
	bspc node -g sticky
super + {d, shift + d, f}
	$BSPWM_SCRIPTS_DIR/state_toggle {floating,pseudo_tiled,fullscreen}
super + shift + f
	bspc desktop -l next
super +  t
	quakify -f
super + g
	is_on=$(bspc config center_pseudo_tiled) && \
	val=true && \
	[[ $is_on == true ]] && val=false && \
	bspc config center_pseudo_tiled $val || bspc config center_pseudo_tiled true

super + {equal, plus, minus}
	bspc node -l {normal, above, below}

alt + {_,shift + }Tab
	bspc node -f {next,prev}.local
super + {_,shift + }Tab
	bspc node -f {next,prev}.local

# rotations
super + {_, ctrl +} {n,m}
	bspc node @{/,parent} -R {-90, 90}

# balance
super + {_,shift +} b
	bspc node @/ {-E,-B}

#gaps
super + {_,ctrl +} {period,comma}
	multiply={1,5} && \
	sign={-1,1} && \
	$BSPWM_SCRIPTS_DIR/gaps $((10 * $multiply * $sign))

#paddings
super + {_,ctrl +} {shift + alt,shift, alt} + {comma,period}
	multiply={1,5} && \
	dir={"top bottom","left right top bottom","left right"} && \
	sign={1,-1} && \
	$BSPWM_SCRIPTS_DIR/padding $((10 * $multiply * $sign)) $dir
#

#floating move
super + {y,u,i,o} + {_, ctrl} 
	$BSPWM_SCRIPTS_DIR/presel_or_move_floating {1,2,3,4} {1,2}

#
#DESKTOPS
#
# switch desktop
ctrl + {super,alt} + {_,shift + }{h,j,k,l}
	$BSPWM_SCRIPTS_DIR/desktop_wall{ , }{switch,switchwithwindow} {west,south,north,east}

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# focus the next/previous desktop
super + bracket{left,right}
	bspc desktop -f {prev,next}

Print
	scrot ~/tmp/%b%d::%H%M%S.png

#
# pointer focus/move/resize
#

# focus
~button1
	bspc pointer -g focus

# start move/resize
super + button{1-3}
	; bspc pointer -g {move,resize_side,resize_corner}

# end move/resize
super + @button{1-3}
	bspc pointer -u
